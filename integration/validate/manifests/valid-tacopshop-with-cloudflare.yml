icon: https://raw.githubusercontent.com/okteto/icons/main/oktaco.png

build:
  menu:
    context: menu

  kitchen:
    context: kitchen

  kitchen-dev:
    context: kitchen
    target: dev

  check:
    context: check

deploy:
  image: hashicorp/terraform:1.4
  commands:
    - name: Create the Cloudflare infrastructure
      command: |
        set -e
        resourceName="${OKTETO_NAMESPACE}-cf-oktacoshop"
        export KUBE_CONFIG_PATH="$KUBECONFIG"
        export KUBE_NAMESPACE=$OKTETO_NAMESPACE
        terraform init -input=false
        terraform apply -input=false -var "cloudflare_api_token=$CLOUDFLARE_API_TOKEN" -var "cloudflare_zone_id=$CLOUDFLARE_ZONE_ID" -var "cloudflare_account_id=$CLOUDFLARE_ACCOUNT_ID" -var "cloudflare_bucket_name=$resourceName" -var "cloudflare_record_name=www-${OKTETO_NAMESPACE}" -var "cloudflare_record_value=menu-${OKTETO_NAMESPACE}.${OKTETO_DOMAIN}" -var "sqs_queue_name=$resourceName" -auto-approve

        r2Dashboard="https://dash.cloudflare.com/${CLOUDFLARE_ACCOUNT_ID}/r2/default/buckets/${resourceName}"
        queueDashboard="https://us-west-2.console.aws.amazon.com/sqs/v2/home?region=us-west-2#/queues"
        cloudflareDNS="https://www-${OKTETO_NAMESPACE}.okteto.net"
        queueUrl=$(terraform output -raw queue_url)

        # make the values available to the following steps and the dashboard
        {
          echo "OKTETO_EXTERNAL_R2_ENDPOINTS_BUCKET_URL=$r2Dashboard"
          echo "OKTETO_EXTERNAL_CF_ENDPOINTS_HOST_URL=$cloudflareDNS"
          echo "R2_BUCKET_NAME=$resourceName"
          echo "OKTETO_EXTERNAL_SQS_ENDPOINTS_QUEUE_URL=$queueDashboard"
          echo "QUEUE_URL=$queueUrl"
          echo "QUEUE_NAME=$resourceName"
        } >> "$OKTETO_ENV"

    - name: Create the CF secret
      command: |
        kubectl create secret generic cf-credentials --save-config --dry-run=client --from-literal=AWS_REGION=WNAM --from-literal=AWS_DEFAULT_REGION=WNAM --from-literal=AWS_SECRET_ACCESS_KEY=$CLOUDFLARE_SECRET_ACCESS_KEY --from-literal=AWS_ACCESS_KEY_ID=$CLOUDFLARE_ACCESS_KEY_ID --from-literal=AWS_ENDPOINT=https://${CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com -o yaml | kubectl apply -f -

    - name: Create the AWS secret
      command: |
        kubectl create secret generic aws-credentials --save-config --dry-run=client --from-literal=AWS_REGION=$AWS_REGION --from-literal=AWS_DEFAULT_REGION=$AWS_REGION --from-literal=AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --from-literal=AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -o yaml | kubectl apply -f -

    - name: Deploy the Menu microservice
      command: |
        helm upgrade --install menu menu/chart --set image=$OKTETO_BUILD_MENU_IMAGE --set queue=$QUEUE_URL --set author="${OKTETO_NAMESPACE}-${OKTETO_USERNAME}"

    - name: Deploy the Kitchen microservice
      command: helm upgrade --install kitchen kitchen/chart --set image=$OKTETO_BUILD_KITCHEN_IMAGE --set queue=$QUEUE_NAME --set check=https://check-${OKTETO_NAMESPACE}.${OKTETO_DOMAIN}/checks

    - name: Deploy the Check microservice
      command: |
        helm upgrade --install check check/chart --set image=${OKTETO_BUILD_CHECK_IMAGE} --set bucket="$R2_BUCKET_NAME"
        echo "OKTETO_EXTERNAL_API_DOCS_ENDPOINTS_DOCS_URL=https://check-${OKTETO_NAMESPACE}.${OKTETO_DOMAIN}/docs" >> $OKTETO_ENV

destroy:
  image: hashicorp/terraform:1.4
  commands:
    - name: Delete the CF infrastructure
      command: |
        set -e
        resourceName="${OKTETO_NAMESPACE}-cf-oktacoshop"
        export KUBE_CONFIG_PATH="$KUBECONFIG"
        export KUBE_NAMESPACE=$OKTETO_NAMESPACE
        terraform init -input=false
        terraform apply -input=false -var "cloudflare_api_token=$CLOUDFLARE_API_TOKEN" -var "cloudflare_zone_id=$CLOUDFLARE_ZONE_ID" -var "cloudflare_account_id=$CLOUDFLARE_ACCOUNT_ID" -var "cloudflare_bucket_name=$resourceName" -var "cloudflare_record_name=www-${OKTETO_NAMESPACE}" -var "cloudflare_record_value=menu-${OKTETO_NAMESPACE}.${OKTETO_DOMAIN}" -var "sqs_queue_name=$resourceName" -auto-approve --destroy

external:
  readme:
    icon: okteto
    notes: README.md
    endpoints:
      - name: readme
        url: https://github.com/okteto/tacoshop-cloudflare
  sqs:
    icon: database
    notes: queue/notes.md
    endpoints:
      - name: queue
  r2:
    icon: database
    notes: r2/notes.md
    endpoints:
      - name: bucket
  cf:
    icon: dashboard
    notes: cf/notes.md
    endpoints:
      - name: host
  api-docs:
    icon: dashboard
    notes: check/notes.md
    endpoints:
      - name: docs

dev:
  menu:
    command: bash
    sync:
      - menu:/usr/src/app
    forward:
      - 9229:9229

  kitchen:
    image: ${OKTETO_BUILD_KITCHEN_DEV_IMAGE}
    command: bash
    sync:
      - kitchen:/usr/src/app
    environment:
      GIN_MODE: debug

  check:
    command: bash
    sync:
      - check:/usr/src/app
    environment:
      RELOAD: true
